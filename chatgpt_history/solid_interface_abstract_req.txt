(** create data types to model metadata associated with an ocaml module. The data should distiguish between mli, and ml files. 
Something should combine the interface and implementation file 
off the same module into a record type that also holds the path of the files*)

(** [file_type] is a variant type representing the type of an OCaml source file. *)
type file_type =
  | Mli
  | Ml

(** [file_info] is a record type representing the metadata of an OCaml source file. *)
type file_info =
  { file_type : file_type
  ; file_path : string
  }

(** [module_info] is a record type representing the metadata of an OCaml module,
    combining the interface (mli) and implementation (ml) files. *)
type module_info =
  { mli_file : file_info option
  ; ml_file : file_info option
  ; module_path : string
  }